# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value
    domstor.template.employee.entity: AppBundle\Entity\Employee
    domstor.template.partner.entity: AppBundle\Entity\Partner
    domstor.template.post.entity: AppBundle\Entity\Post
    domstor.template.review.entity: AppBundle\Entity\Review
    domstor.template.special_offer.entity: AppBundle\Entity\SpecialOffer
    domstor.template.urgent_sale.entity: AppBundle\Entity\UrgentSale
    domstor.template.vacancy.entity: AppBundle\Entity\Vacancy
    domstor.template.slider.entity: AppBundle\Entity\Slider

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: false
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: false
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: true

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
#    AppBundle\:
#        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
#        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'
